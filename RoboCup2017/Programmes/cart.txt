#pragma config(Sensor, S1,     colour,         sensorEV3_Color)
#pragma config(Sensor, S2,     touch, sensorEV3_Touch)
#pragma config(Motor,  motorA,          arms,          tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorB,          left,          tmotorEV3_Large, PIDControl, encoder)
#pragma config(Motor,  motorC,          right,         tmotorEV3_Large, PIDControl, encoder)
//motor setup

string col; //variable to store colour that robot is sensing
int r,g,b; //variables to store the raw red, green and blue values from the colour sensor
int armSpeed=70, armWaveDuration; //variables to store the speed to move the arms and the amount of time that the arms wave for

//moving functions
void on(int leftSpeed, int rightSpeed, int timeToWait=0) { //turn on specified motors at desired speeds
	motor[left] = leftSpeed;
	motor[right] = rightSpeed;
	sleep(timeToWait);
}

void off(int timeToWait=0) { //turn off both motors
	motor[left] = 0;
	motor[right] = 0;
	sleep(timeToWait);
}

void drive(int leftSpeed, int rightSpeed, int duration, int timeToWait=0) { //turn on motors at a specified speed for a specified time
	on(leftSpeed,rightSpeed,duration);
	off(timeToWait);
}

void followToRed(int timeToWait=0) { //follow black line on the right side until it sees red
	while(col != "Red") {
		if(col == "Black") {
			on(35,5);
		} else {
			on(5,35);
		}
	}
	off(timeToWait);
}

void followToRedLeft(int timeToWait=0) { //follow black line on the left side until it sees red
	while(col != "Red") {
		if(col == "Grey") {
			on(35,5);
		} else {
			on(5,35);
		}
	}
	off(timeToWait);
}

void followLine(int duration, int timeToWait=0) { //follow black line for specific amount of time
	clearTimer(T1);
	while(time1[T1] < duration) {
		if(col == "Black") {
			on(35,5);
		} else {
			on(5,35);
		}
	}
	off(timeToWait);
}

//tasks

task getColour() { //read colour sensor and determine what colour it is seeing
	while(true) {
		getColorRawRGB(colour,r,g,b);
		displayBigTextLine(1, "Red: %d", r);
		displayBigTextLine(3, "Green: %d", g);
		displayBigTextLine(5, "Blue: %d", b);
		if(r>50 && g>50 && b>50) {
			col = "Grey";
		} else if(r<50 && g<50 && b<50) {
			col = "Black";
		} else if(r>50 && g<60 && b<40) {
			col = "Red";
		}
		displayBigTextLine(7, "Colour: %s", col);
	}
}

task waveArms() { //wave arms at specified speed and for specified time
	motor[arms] = armSpeed;
	sleep(armWaveDuration);
	motor[arms] = 0;
}

task stopButton() { //press the touch sensor to stop the programme
	while(getTouchValue(touch) == 0) {}
	while(getTouchValue(touch) == 1) {}
	stopAllTasks();
}

task main() {
	while(getTouchValue(touch) == 0) {}
	while(getTouchValue(touch) == 1) {}
	startTask(getColour);
	startTask(stopButton);

	//go to tombstone
	followToRed(1500);
	armWaveDuration = 3000;	startTask(waveArms);
	drive(-50,50,200);

	//find next line
	on(-40,-40);
	sleep(2000);
	while(col == "Grey") {}

	off(500);
	drive(40,40,300);
	on(40,-40);

	while(col == "Grey") {}
	while(col == "Black") {}
	off();

	//go to coffin
	followToRed(500);
	startTask(waveArms);
	on(40,0);

	sleep(750);
	while(col == "Grey") {}
	while(col == "Black") {}
	
	//go up ramp
	on(-30,30);
	while(col == "Grey") {}
	off();

	followToRed(500);
	on(30,-30);

	while(col != "Grey") {}
	while(col != "Black") {}

	//come down ramp
	armWaveDuration = 10000; startTask(waveArms);
	followToRed(500);
	on(30,0);
	while(col != "Grey") {}
	while(col != "Red") {}
	sleep(200);

	//go to spiders
	drive(50,50,5000);
	armWaveDuration = 1000;
	repeat(3) {
		armSpeed = -70; startTask(waveArms);
		drive(-50,-50,1000);
		armSpeed = 70; startTask(waveArms);
		drive(50,50,1000);
	}

	//go around board
	drive(-40,40,1000);
	drive(20,40,2500);
	drive(30,30,8000);

	armWaveDuration = 3000; startTask(waveArms);
	drive(-40,40,750);
	on(20,40);

	while(col == "Grey") {}
	while(col == "Black") {}
	on(40,-40);

	while(col != "Black") {}
	while(col != "Grey") {}
	followLine(7500);

	armWaveDuration = 3500;	startTask(waveArms);
	drive(100,-100,3500);
}